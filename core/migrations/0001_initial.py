# Generated by Django 3.2 on 2022-01-03 03:01

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import localflavor.in_.models
import utils.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('email', models.EmailField(blank=True, db_index=True, default=None, max_length=128, null=True)),
                ('phone', models.CharField(blank=True, db_index=True, default=None, max_length=10, null=True)),
                ('address_1', models.CharField(max_length=128)),
                ('address_2', models.CharField(blank=True, max_length=128)),
                ('city', models.CharField(max_length=64)),
                ('state', localflavor.in_.models.INStateField(max_length=2)),
                ('zip_code', models.CharField(max_length=6)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('unordered', models.IntegerField(db_index=True, default=0)),
                ('ordered', models.IntegerField(default=0)),
                ('fulfilled', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'inventories',
            },
        ),
        migrations.CreateModel(
            name='InventoryAdjustment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unordered_change', models.IntegerField(default=0)),
                ('ordered_change', models.IntegerField(default=0)),
                ('fulfilled_change', models.IntegerField(default=0)),
                ('reason', models.CharField(choices=[('order_reserved', 'Order Reserved'), ('order_fulfilled', 'Order Fulfilled'), ('order_canceled', 'Order Canceled'), ('inventory_received', 'Inventory Received'), ('inventory_reversal', 'Inventory Reversal'), ('inventory_slippage', 'Inventory Slippage')], default=None, max_length=30)),
                ('comment', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.inventory')),
            ],
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, help_text='Description of the warehouse.', max_length=400, null=True)),
                ('business_name', models.CharField(default='Ohi Technologies', max_length=250)),
                ('address_1', models.CharField(max_length=128)),
                ('address_2', models.CharField(blank=True, max_length=128)),
                ('city', models.CharField(max_length=64)),
                ('state', localflavor.in_.models.INStateField(max_length=2)),
                ('zip_code', models.CharField(max_length=6)),
                ('phone', models.CharField(max_length=10)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('short_code', models.CharField(blank=True, help_text='Shortcode for this address. (ie. MA1, BK1, LA1, etc)', max_length=25, null=True)),
                ('location_type', models.CharField(choices=[('warehouse', 'Warehouse'), ('factory', 'Factory')], default='factory', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(db_index=True, max_length=50)),
                ('title', models.CharField(db_index=True, max_length=255)),
                ('type', models.CharField(choices=[('paper', 'Paper'), ('ink', 'Ink'), ('plate', 'Plate')], db_index=True, default='paper', max_length=10)),
                ('variant', models.CharField(db_index=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('disabled_at', models.DateTimeField(blank=True, db_index=True, default=None, null=True)),
            ],
            options={
                'unique_together': {('sku', 'title', 'type', 'variant')},
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_status', models.CharField(choices=[('not_yet_picked', 'Not Yet Picked'), ('designing', 'Designing'), ('plate_making', 'Plate Making'), ('pending_printing', 'Pending Printing'), ('in_printing', 'In Printing'), ('in_binding', 'In Binding'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled'), ('unmet_conditions', 'Order Issue')], db_index=True, default='not_yet_picked', max_length=20)),
                ('print_priority', models.PositiveSmallIntegerField(default=5, help_text='Set the priority for this order to be packed - 1 is the highest priority, 10 is the lowest', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='core.customer')),
            ],
            options={
                'abstract': False,
            },
            bases=(utils.models.AutoUpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='LotCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lot_number', models.CharField(blank=True, max_length=100, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lot_codes_set', to='core.product')),
            ],
            options={
                'unique_together': {('product', 'lot_number')},
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('label', models.CharField(blank=True, help_text='Can be set generically, or will be calculated if any of the aisle, column, level, bin are set.', max_length=132, null=True)),
                ('aisle', models.CharField(blank=True, max_length=32, null=True)),
                ('column', models.CharField(blank=True, max_length=32, null=True)),
                ('level', models.CharField(blank=True, max_length=32, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('enabled_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.warehouse')),
            ],
            options={
                'unique_together': {('warehouse', 'aisle', 'column', 'level')},
            },
            bases=(utils.models.AutoUpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='LineItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity', models.PositiveSmallIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='line_item_set', to='core.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.product')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryAdjustmentLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unordered_change', models.IntegerField(default=0)),
                ('ordered_change', models.IntegerField(default=0)),
                ('fulfilled_change', models.IntegerField(default=0)),
                ('absolute_pre_unordered', models.IntegerField(default=0)),
                ('absolute_pre_ordered', models.IntegerField(default=0)),
                ('absolute_pre_fulfilled', models.IntegerField(default=0)),
                ('absolute_post_unordered', models.IntegerField(default=0)),
                ('absolute_post_ordered', models.IntegerField(default=0)),
                ('absolute_post_fulfilled', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('inventory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.inventory')),
                ('source_adjustment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.inventoryadjustment')),
            ],
        ),
        migrations.AddField(
            model_name='inventoryadjustment',
            name='line_item',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.lineitem'),
        ),
        migrations.AddField(
            model_name='inventoryadjustment',
            name='order',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.order'),
        ),
        migrations.AddField(
            model_name='inventoryadjustment',
            name='user',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='inventory',
            name='location',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.location'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='lot_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.lotcode'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.product'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='warehouse',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.warehouse'),
        ),
        migrations.AddConstraint(
            model_name='inventory',
            constraint=models.UniqueConstraint(fields=('product', 'warehouse', 'lot_code'), name='unique_with_lot_code'),
        ),
        migrations.AddConstraint(
            model_name='inventory',
            constraint=models.UniqueConstraint(condition=models.Q(lot_code=None), fields=('product', 'warehouse'), name='unique_without_lot_code'),
        ),
    ]
